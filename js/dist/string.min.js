!function(t,r){"use strict";var n=function(t,r,n){var e=n(t,r);return function(t){return(e+t).slice(-r)}},e=function(t,r,n){var e=n(t,r);return function(t){return(t+e).slice(0,r)}};t.lfill_t=n,t.rfill_t=e;var u=function(t,n){var e={};return e.encode=function(e,u,o){var i,a=0,f=new t,p=f.empty(),s=p,c=0,l=e.length;for(f.put("",0);l>c;++c){for(;l>c&&(i=s.get(e,c),i!==r);++c)s=i;if(c===l)break;s.set(e,c,++a),u.push(s.value()),o.push(e[c]),s=p}u.push(s.value()),o.push(n)},e.decode=function(t,r){for(var e,u,o,i,a,f=[[0,0]],p="",s=0,c=t.length;c>s;++s)e=t[s],u=r[s],o=f[e][0],i=f[e][1],a=p.length,p+=p.slice(o,i),u!==n&&(f.push([a,a+i-o+1]),p+=u);return p},e};t.lempelziv_t=u;var o=function(t,r,n){var e,u,o;for(u=n-r,e=Math.floor(u/2),o=0;e>o;++o)if(t[r+o]!==t[n-o-1])return!1;return!0};t.palindrome=o;var i=function(t,r){for(var n=new Array(r);r--;)n[r]=t;return n.join("")};t.strmul=i;var a=function(t,n){var e=function(r){this.ad=new Array(t),this.val=r};e.prototype.get=function(t,r){return this.ad[n(t,r)]},e.prototype.set=function(t,r,u){return this.ad[n(t,r)]=new e(u)},e.prototype.value=function(){return this.val};var u=function(){this.pt=new e};return u.prototype.empty=function(){return this.pt},u.prototype.put=function(t,u){for(var o,i=0,a=t.length,f=this.pt;a>i;++i)o=n(t,i),f=f.ad[o]===r?f.ad[o]=new e:f.ad[o];return f.val=u,f},u.prototype.get=function(t){for(var r=0,n=t.length,e=this.pt;n>r;++r)e=e.get(t,r);return e},u};t.simpletrie_t=a}("undefined"==typeof exports?this.string={}:exports);
//# sourceMappingURL=js/dist//string.js.map